<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub+Hexo搭建个人博客</title>
      <link href="/2025/05/01/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2025/05/01/GitHub+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><p>安装Hexo之前需要安装<a href="https://nodejs.org/zh-cn">Node.js</a>和<a href="https://git-scm.com/">Git</a>这两个应用程序。</p><p>通过查看版本号的方式来判断相关的应用程序是否安装成功。</p><p>查看node.js版本<br><code>node -v</code></p><p>查看npm版本<br><code>npm -v</code></p><p>使用淘宝镜像源<code>http://registry.npm.taobao.org</code>，全局安装cnpm包到系统中，后续可以通过cnpm来加速npm包的安装过程。<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code></p><p>查看cnpm版本<br><code>cnpm -v</code></p><p>查看git版本<br><code>git -v</code></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>新建一个文件夹用于存放你的博客文件，右击该文件夹点击<code>Git Bush Here</code></p><p>安装Hexo<br><code>cnpm install -g hexo-cli</code></p><p>查看hexo版本<br><code>hexo -v</code></p><h1 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h1><p>生成博客并初始化博客<br><code>hexo init</code></p><p>启动本地博客服务<br><code>hexo s</code></p><p>按照回显提示在浏览器中打开<a href="http://localhost:4000/">http://localhost:4000/</a><br>即可在本地访问博客。</p><p><code>Ctrl+C</code>停止服务，至此，你的博客已经在本地搭建完成了！</p><h1 id="使用GitHub远端部署"><a href="#使用GitHub远端部署" class="headerlink" title="使用GitHub远端部署"></a>使用GitHub远端部署</h1><p>在<code>GitHub</code>建立个人仓库<br>在<code>Repository name</code>一栏中<br>填写仓库名<code>YourGitHubName.GitHub.io</code>（YourGitHubName为你的GitHub名称）<br><strong>千万别忘记仓库名最后要加上<code>.GitHub.io</code></strong><br>点击<code>Create repository</code>创建个人仓库</p><h2 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h2><p>在blog目录下打开Git Bush（右击文件夹）进行安装<br><code>cnpm install --save hexo-deployer-git</code></p><h2 id="配置git身份"><a href="#配置git身份" class="headerlink" title="配置git身份"></a>配置git身份</h2><p>全局配置git身份<br><code>git config --global user.name &quot;username&quot;</code><br><code>git config --global user.email &quot;email&quot;</code><br>（将username和eamil换成的你的GitHub名称和邮箱）</p><h2 id="配置本地ssh"><a href="#配置本地ssh" class="headerlink" title="配置本地ssh"></a>配置本地ssh</h2><p>在此使用ssh部署的方法，而不是https部署，避免了每次远端部署都需要输入账号密码的麻烦。</p><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><p>配置_config.yml文件中# Deployment项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: &#x27;git&#x27;</span><br><span class="line">repo: git@GitHub.com:YourGitHubName/YourGitHubName.GitHub.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>（YourGitHubName为你的GitHub名称）</p><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p><code>ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;</code><br>一路回车，密钥将在C:\Users\用户名\ .ssh 下生成.</p><h2 id="配置远端ssh"><a href="#配置远端ssh" class="headerlink" title="配置远端ssh"></a>配置远端ssh</h2><h3 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h3><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key，添加公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tiltle: 随便</span><br><span class="line">Key: 公钥（id_rsa.pub中的内容）</span><br></pre></td></tr></table></figure><p>点击 Add SSH key 完成添加。</p><h2 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h2><p><code>ssh -T git@GitHub.com</code><br>窗口显示 “Are you sure……”<br>一路回车（Yes）.<br>显示 “Hi xxx! You’ve successfully authenticated……” 即连接成功.</p><h2 id="远程访问博客"><a href="#远程访问博客" class="headerlink" title="远程访问博客"></a>远程访问博客</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存文件和已生成的静态文件。</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo deploy #部署到GitHub</span><br></pre></td></tr></table></figure><p>访问 <code>https://YourGitHubName.GitHub.io</code><br>（YourGitHubName为你的GitHub名称）<br>远端部署完成！</p><h1 id="hexo基本命令"><a href="#hexo基本命令" class="headerlink" title="hexo基本命令"></a>hexo基本命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  #查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><h2 id="编写-windows-脚本"><a href="#编写-windows-脚本" class="headerlink" title="编写 windows 脚本"></a>编写 windows 脚本</h2><h3 id="一键本地预览"><a href="#一键本地预览" class="headerlink" title="一键本地预览"></a>一键本地预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">cd C:\documentation\hexoblog</span><br><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</span><br></pre></td></tr></table></figure><h3 id="一键上传至云端"><a href="#一键上传至云端" class="headerlink" title="一键上传至云端"></a>一键上传至云端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">cd C:\documentation\hexoblog</span><br><span class="line">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><h1 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h1><p>博文存放于博客根目录下 <code>source\_posts</code> 文件夹里面。<br>写博文使用的语言是<a href="https://markdown.com.cn/">Markdown</a>语言。</p><p>在此推荐的编辑器是<a href="https://typoraio.cn/">Typora</a>。</p><p>2021年11月，Typora 成为收费软件，法海之路 论坛的大佬对此进行了补丁修复，由于一些原因，法海之路 论坛原文内容已经下架，下面两个链接是镜像站的内容。<br><a href="https://fahai.joytion.cn/jszt/14.html">Typora  - 法海之路 (joytion.cn)</a><br><a href="https://www.mhtsec.com/fahai/shsb/14.html">Typora  - 法海之路 (mhtsec.com)</a></p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p><a href="https://hexo.io/themes/">Themes | Hexo</a><br>Hexo 官方的主题库。</p><p>更换主题以及配置主题的方法在主题的相关说明文档中会有说明，在此不再进行赘述。</p><h1 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h1><h2 id="访问不了GitHub或自己搭建的博客"><a href="#访问不了GitHub或自己搭建的博客" class="headerlink" title="访问不了GitHub或自己搭建的博客"></a>访问不了GitHub或自己搭建的博客</h2><p>使用科学上网</p><h2 id="配置完ssh后验证连接时显示22号端口拒绝访问"><a href="#配置完ssh后验证连接时显示22号端口拒绝访问" class="headerlink" title="配置完ssh后验证连接时显示22号端口拒绝访问"></a>配置完ssh后验证连接时显示22号端口拒绝访问</h2><p><code>ssh: connect to host github.com port 22: connection refused</code></p><h3 id="修改-SSH-配置文件使用端口-443"><a href="#修改-SSH-配置文件使用端口-443" class="headerlink" title="修改 SSH 配置文件使用端口 443"></a>修改 SSH 配置文件使用端口 443</h3><p>打开或创建<code>~/.ssh/config</code> 文件。<br>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h3 id="检查DNS-配置"><a href="#检查DNS-配置" class="headerlink" title="检查DNS 配置"></a>检查DNS 配置</h3><p>有时，DNS 配置问题也会导致连接被拒绝<br>清除 DNS 缓存：<br><code>ipconfig /flushdns</code><br>修改 hosts 文件，添加 GitHub 的 IP 地址映射：<br><code>140.82.113.4 github.com</code><br><strong>要用管理员权限打开hosts文件，不然无法进行修改</strong></p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
